{"version":3,"sources":["components/NavBar.jsx","components/SignUpForm.jsx","components/LoginForm.jsx","pages/Home.jsx","components/Employee.jsx","pages/EmployeeList.jsx","components/Client.jsx","pages/ClientList.jsx","components/Project.jsx","pages/ProjectList.jsx","components/NewProjectForm.jsx","components/NewClientForm.jsx","components/NewEmployeeForm.jsx","pages/Logout.jsx","components/ShowFormButtons.jsx","pages/ClientPage.jsx","pages/EmployeePage.jsx","components/Todo.jsx","pages/UserProfile.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","navigate","useNavigate","className","onClick","style","justifySelf","marginRight","color","marginLeft","to","SignUpForm","onLogin","useState","newUser","setNewUser","handleChange","e","key","target","id","value","formData","errors","setErrors","isLoading","setIsLoading","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","username","password","password_confirmation","passwordConfirmation","first_name","firstName","last_name","lastName","role","then","r","created","json","err","htmlFor","type","autoComplete","onChange","map","LoginForm","setUsername","setPassword","ok","placeholder","error","Home","clients","employees","projects","length","todos","Employee","employee","onDeleteEmployee","showProjects","setShowProjects","listOfProjects","project","completed","name","title","projects_count","res","console","log","EmployeeList","search","setSearch","renderEmployees","filter","toLowerCase","includes","Client","client","onDeleteClient","ClientList","renderClients","Project","onDeleteProject","onUpdateProject","isEditing","setIsEditing","setName","clientId","setClientId","employeeId","setEmployeeId","setCompleted","handleDelete","handleSubmit","updatedProject","client_id","employee_id","data","catch","width","margin","checked","backgroundColor","fontSize","toUpperCase","fontStyle","ProjectList","React","setFilter","renderProjects","NewProjectForm","setShowForm","onAddProject","newProject","NewClientForm","onSetShowFormClient","onAddClient","newClient","NewEmployeeForm","onSetShowFormEmployee","onAddEmployee","setTitle","newEmployee","Logout","onLogout","height","ShowFormButtons","onSetShowForm","ClientPage","useParams","setClient","useEffect","EmployeePage","setEmployee","Todo","todo","onDeleteTodo","UserProfile","newTodo","setNewToDo","setTodos","handleDeleteTodo","user_id","App","setUser","setClients","setEmployees","setProjects","showForm","showFormClient","setShowFormClient","showFormEmployee","setShowFormEmployee","document","newlist","newList","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb7e0e30.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate, Link} from 'react-router-dom'\n\nconst NavBar = ({user}) => {\n    const navigate = useNavigate()   \n\n    const loggedinButtons = () => {\n        return (\n            <header className='App-header'>\n                <h3 className='App-logo' onClick={() => navigate('/')}>Project Tracker</h3>\n                <div style={{justifySelf: 'center', marginRight: '100px'}}>\n                    <Link style={{color: \"white\", marginLeft: '20px', marginRight: '20px'}} to='/clients'>Clients</Link>\n                    <Link style={{color: \"white\", marginLeft: '20px', marginRight: '20px'}} to='/projects'>Projects</Link>\n                    <Link style={{color: \"white\", marginLeft: '20px', marginRight: '20px'}} to='/employees'>Employees</Link>                       \n                </div>\n                <Link style={{color: \"white\", marginLeft: '20px' }} to='/user'>👤Profile</Link>\n                <Link style={{color: \"white\", marginRight: '20px'}} to='/logout' >Log Out</Link>                \n            </header>\n        )\n    }\n    \n    const loggedOutButtons = () => {\n        return (\n            <header className='App-header'>\n                <h3 className='App-logo' onClick={() => navigate('/')}>Project Tracker</h3>                \n                <Link style={{color: \"white\"}} to='/login'>Log In</Link>\n                <Link style={{color: \"white\"}} to='/signup'>Create an account</Link>                 \n            </header>\n        )\n    }\n\n  return (\n    <>        \n        {user ? loggedinButtons() : loggedOutButtons()}        \n    </>\n   \n  )\n}\n\nexport default NavBar;\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst SignUpForm = ({onLogin}) => {\n  const navigate = useNavigate()\n\n  const defaultData = {\n        \"username\": '',\n        \"password\": '',\n        \"passwordConfirmation\": '',\n        \"firstName\": '',\n        \"lastName\": '',\n        \"role\": '',\n    }\n    const [newUser, setNewUser] = useState(defaultData)\n    \n    const handleChange = (e) => {\n        let key = e.target.id\n        let value = e.target.value\n        let formData = {...newUser, [key]: value}        \n        setNewUser(formData)}\n    \n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors([]);\n        setIsLoading(true);\n        fetch(\"/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: newUser.username,\n            password: newUser.password,\n            password_confirmation: newUser.passwordConfirmation,\n            first_name: newUser.firstName,\n            last_name: newUser.lastName,\n            role: newUser.role,\n          }),\n        }).then((r) => { \n          setIsLoading(false);          \n          if (r.created) {\n            r.json().then((user) => {\n              navigate('/')\n              onLogin(user)});\n          } else {\n            r.json().then((err) => setErrors(err.errors));\n          }\n        });\n      }\n    \n  return (\n    <form className='signup-form' onSubmit={handleSubmit}>\n        <h2>Create new account</h2>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={newUser.username}\n        \n        onChange={handleChange}\n        />      \n      \n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={newUser.password}        \n          onChange={handleChange}\n          autoComplete=\"current-password\"\n        />\n      \n        <label htmlFor=\"password\">Password Confirmation</label>\n        <input\n          type=\"password\"\n          id=\"passwordConfirmation\"\n          value={newUser.passwordConfirmation}\n          onChange={handleChange}        \n          autoComplete=\"current-password\"\n        />\n      \n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          value={newUser.firstName}\n          onChange={handleChange}\n          \n        />\n      \n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          value={newUser.lastName}\n          onChange={handleChange}\n        \n        />\n     \n        <label htmlFor=\"role\">Your role</label>\n        <input \n        type=\"text\"         \n          id=\"role\"\n          value={newUser.role}\n          onChange={handleChange}\n          \n        />     \n        <button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</button>     \n        <h3>Or login to your account</h3>\n        <button onClick={()=>navigate('/login')}>Login</button>\n        {errors ? errors.map((err) => (<p style={{color: 'red'}} key={err}>{err}</p>)) : null}\n      \n    </form>\n\n  )\n}\n\nexport default SignUpForm","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst LoginForm = ({onLogin}) => {\n    const navigate = useNavigate()\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n        \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"/login\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ username, password }),\n          }).then((r) => {            \n            if (r.ok) {\n                r.json().then((user) => {\n                    onLogin(user)\n                    navigate('/')                    \n                });\n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n          });\n    }\n\n    return (\n        <div>\n            <h2> Already have an account? Please log In</h2>\n            <form onSubmit={handleSubmit}>                \n                <input type=\"text\" id=\"username\" placeholder=\"username\"  autoComplete=\"off\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n                <input type=\"password\" id=\"password\" placeholder=\"password\" autoComplete=\"off\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                <button type=\"submit\">Login</button>\n                {errors? errors.map(error => <p style={{color: 'red'}} key={error}>{error}</p>) : null}\n            </form>\n            <h3>Or create new account</h3>\n            <button onClick={()=>navigate('/signup')}>Sign Up</button>\n        </div>\n  )\n}\n\nexport default LoginForm","\n\nimport React  from 'react'\nimport {useNavigate} from 'react-router-dom'\n\nconst Home = ({user, clients, employees, projects}) => {\n  const navigate = useNavigate()\n  const loggedInPage = () => {\n      return (\n        <div>\n          <h2>Welcome {user.first_name} {user.last_name}! You have:</h2>\n          <h4 onClick={()=>navigate('/employees')}>{employees.length} employees</h4>\n          <h4 onClick={()=>navigate('/clients')}>{clients.length} clients</h4>\n          <h4 onClick={()=>navigate('/projects')}>{projects.length} projects</h4>\n          <h4 onClick={()=>navigate('/user')}>{user.todos.length} items in your todo list</h4>          \n        </div>\n      )\n    }\n\n    return (\n      <div>\n        {user ? loggedInPage() : <h2>Please Sign Up or Login</h2>}\n      </div>\n  )\n}\n\nexport default Home","import React, {useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst Employee = ({employee, onDeleteEmployee}) => {\n  const [showProjects, setShowProjects] = useState(false)\n  const listOfProjects = employee.projects.map(project => project.completed ? <li key={project.id}>{project.name}, COMPLETED</li> : <li key={project.id}>{project.name}, IN PROGRESS</li>)\n  const navigate = useNavigate()\n\n  const handleDelete = () =>{\n    fetch(`/employees/${employee.id}`, {method: 'DELETE'})\n    .then(res => {\n      if(res.ok) {\n        onDeleteEmployee(employee.id)\n      }else{\n        console.log('error: ', res.errors)\n      }\n    }) \n  }\n\n  const handleShowEmployee =() => {    \n    navigate('/employees/' + employee.id)\n  }\n\n  return (\n    <div onClick={()=>{setShowProjects(!showProjects)}} className='clientCard'>      \n      <h4>{employee.name}, {employee.title}</h4>\n      \n      {employee.projects_count === 1 ? <p> 1 project ↓</p> : <p>{employee.projects_count} projects ↓</p>}      \n      {showProjects ? listOfProjects : null} \n      {employee.projects_count === 0 ? <button onClick={handleDelete}>Delete</button> : null} \n      <button onClick={handleShowEmployee}>Go to Employee page</button>      \n    </div>\n  )\n}\n\nexport default Employee","import React, {useState} from 'react'\nimport Employee from '../components/Employee'\n\nconst EmployeeList = ({employees, onDeleteEmployee}) => {\n  const [search, setSearch] = useState('')\n  let employeeList = employees.filter(employee => employee.name.toLowerCase().includes(search) || employee.title.toLowerCase().includes(search))\n  const renderEmployees = employeeList.map(employee => <Employee employee={employee} key={employee.id} onDeleteEmployee={onDeleteEmployee} />)\n  \n  \n  return (\n    <>\n      <h2>Employee List  <input type='text' placeholder=' 🔍 SEARCH' onChange={(e)=>setSearch(e.target.value.toLowerCase())}/></h2>\n      \n      <div className='clientCardContainer'>      \n        {employees ? renderEmployees : <p>Can't find employees</p>} \n      </div>       \n    </>\n  )\n}\n\nexport default EmployeeList","import React, {useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst Client = ({client, onDeleteClient}) => {\n  const [showProjects, setShowProjects] = useState(false)\n  const listOfProjects = client.projects.map(project => project.completed ? <li key={project.id}>{project.name}, COMPLETED</li> : <li key={project.id}>{project.name}, IN PROGRESS</li>)\n\n  const navigate = useNavigate()\n  \n  const handleDelete = () =>{    \n    fetch(`/clients/${client.id}`, {method: 'DELETE'})\n    .then(res => {\n      if(res.ok) {\n        onDeleteClient(client.id)\n      }else{\n        console.log('error: ', res.errors)\n      }\n    })  \n  }\n\n  const handleShowClient =() => {    \n    navigate('/clients/' + client.id)\n  }\n  \n  return (\n    <div  onClick={()=>{setShowProjects(!showProjects)}} className='clientCard'>    \n      <h3>{client.name}</h3>\n      {client.projects_count === 1 ? <p> 1 project ↓</p> : <p>{client.projects_count} projects ↓</p>}\n      {showProjects ? listOfProjects : null}\n      {client.projects_count === 0 ? <button onClick={handleDelete}>Delete</button> : null}\n      <button onClick={handleShowClient}>Go to Client page</button>      \n    </div>\n  )\n}\n\nexport default Client","import React, {useState} from 'react'\nimport Client from '../components/Client'\n\nconst ClientList = ({clients, onDeleteClient}) => {\n  const [search, setSearch] = useState('')\n  let clientList = clients.filter(client => client.name.toLowerCase().includes(search))  \n  const renderClients = clientList.map(client => <Client client={client} onDeleteClient={onDeleteClient}  key={client.id} />)\n\n   return (\n    <>\n      <h2>Client List  <input type='text' placeholder=' 🔍 SEARCH' onChange={(e)=>setSearch(e.target.value.toLowerCase())}/></h2>\n     \n        <div className='clientCardContainer'>\n        {clients ? renderClients : <p>Can't find clients</p>}      \n      </div>\n    </>\n  )\n}\n\nexport default ClientList","import React, {useState} from 'react'\n\nconst Project = ({project, clients, employees, onDeleteProject, onUpdateProject}) => {\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setName] = useState(project.name)\n  const [clientId, setClientId] = useState(project.client.id)\n  const [employeeId, setEmployeeId] = useState(project.employee.id)\n  const [completed, setCompleted] = useState(project.completed)\n  const [errors, setErrors] = useState([])\n  \n  const handleDelete = () => {\n    fetch(`/projects/${project.id}`, { method: 'DELETE' })\n    .then((res)=> {if (res.ok){\n      onDeleteProject(project.id)\n    }})\n  }\n\n  const dropDownClients = () => {\n    return clients.map(client => <option key={client.id} value={client.id}>{client.name}</option>)\n  }\n  const dropDownEmployees = () => {\n      return employees.map(employee => <option key={employee.id} value={employee.id}>{employee.name}, {employee.title}</option>)\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const updatedProject = {\n      name: name,\n      client_id: clientId,\n      employee_id: employeeId,\n      completed: completed\n    }\n    fetch(`/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {'content-type': 'application/json','accept': 'application/json'},\n      body: JSON.stringify(updatedProject)\n    })\n    .then(res => {\n            if(res.ok) {\n                res.json().then(data => {\n                    onUpdateProject(data)\n                    setIsEditing(false)                    \n                })\n            } else {\n                res.json().then(data => setErrors(data.errors))\n            }\n    })\n    .catch(err => console.log(err)) \n  }\n\n  const editProject = () => {\n    return(      \n      <form onSubmit={handleSubmit}>\n        <input \n            type=\"text\" \n            id=\"projectname\"\n            autoComplete=\"off\"\n            value = {name}\n            placeholder = \"Project name\"\n            onChange = {(e) => setName(e.target.value)}\n            style={{width: '200px', margin: '5px'}}\n        />        \n        <select  \n        value={clientId} \n        onChange={(e) => setClientId(e.target.value)}\n        style={{width: '200px', margin: '5px'}}\n        >\n            <option value=\"\">Select a client</option>\n            {dropDownClients()}\n        </select>        \n        <select \n        value={employeeId} \n        onChange={(e) => setEmployeeId(e.target.value)}\n        style={{width: '200px', margin: '5px'}}\n        >\n            <option value=\"\">Select a employee</option>\n            {dropDownEmployees()}\n        </select>\n        <label htmlFor='completed'>Completed</label>\n        <input id='completed' type={'checkbox'} checked={completed} onChange={(e) => setCompleted(e.target.checked)}/>\n        {errors? errors.map(error => <p key={error}>{error}</p>) : null}\n        <button type=\"submit\" style={{width: '200px', margin: '5px'}}>Save</button>\n    </form>\n    \n    )\n  }\n\n  const showProject =()=>{\n    return(\n      <div>\n        <div style={{backgroundColor: '#6a80adb0', fontSize: '20px'}}>\n          {project.name.toUpperCase()}\n        </div>        \n        {project.completed ? <p style={{backgroundColor: 'white', color: \"green\", fontStyle: 'oblique'}}>COMPLETED!</p> : <p style={{backgroundColor: 'white',color: \"red\", fontStyle: 'oblique'}}>IN PROGRESS</p>}\n        <div >\n          Client: {project.client.name}\n        </div>\n        <div >\n          Employee: {project.employee.name}, {project.employee.title}\n        </div>\n        <div>\n          <button onClick={()=> {setIsEditing(!isEditing)}}>Edit</button>\n          <button onClick={handleDelete}>Delete</button>\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"projectCard\">\n      {isEditing ? editProject() : showProject()}\n    </div>\n  )\n}\n\nexport default Project","import React from 'react'\nimport Project from '../components/Project'\n\nconst ProjectList = ({clients, employees, projects, onDeleteProject, onUpdateProject}) => {\n  const [filter, setFilter] = React.useState('all')\n  \n  let projectList;\n  if (filter === 'all') {\n    projectList = projects;\n  }else if (filter === 'completed') {\n    projectList = projects.filter(project => project.completed === true);\n  }else{\n    projectList = projects.filter(project => project.completed === false || project.completed === null)  ;  \n  }\n\n  const renderProjects = projectList.map(project => <Project key={project.id} project={project} clients={clients} employees={employees} onDeleteProject={onDeleteProject} onUpdateProject={onUpdateProject}/>)\n\n  return (\n    <div >\n      <h2 >Project List </h2>\n      <input type='radio' name='filter' value='all' onChange={e => setFilter(e.target.value)} checked={filter === 'all'} /> All\n      <input type='radio' name='filter' value='completed' onChange={e => setFilter(e.target.value)} checked={filter === 'completed'} /> Completed\n      <input type='radio' name='filter' value='inProgress' onChange={e => setFilter(e.target.value)} checked={filter === 'inProgress'} /> In Progress\n      <div className='projectCardContainer'>\n        {projects ? renderProjects : <p>No projects so far</p>}     \n      </div>       \n    </div>\n  )\n}\n\nexport default ProjectList;","import React, { useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst NewProjectForm = ({setShowForm, clients, employees, onAddProject}) => {\n    \n    const navigate = useNavigate()    \n    const [name, setName] = useState('')\n    const [clientId, setClientId] = useState('')\n    const [employeeId, setEmployeeId] = useState('')\n    const [errors, setErrors] = useState([])\n    // const [isLoading, setIsLoading] = useState(false)\n\n    const dropDownClients = () => {\n        return clients.map(client => <option key={client.id} value={client.id}>{client.name}</option>)\n    }\n    \n    const dropDownEmployees = () => {\n        return employees.map(employee => <option key={employee.id} value={employee.id}>{employee.name}, {employee.title}</option>)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const newProject = {\n            name: name,\n            client_id: clientId,\n            employee_id: employeeId\n        }\n        fetch('/projects', {\n            method: 'POST',\n            headers: {'content-type': 'application/json', 'accept': 'application/json'},\n            body: JSON.stringify(newProject)\n        })\n        .then(res => {\n                if(res.ok) {\n                    res.json().then(data => {\n                        onAddProject(data)\n                        setShowForm(false)\n                        navigate('/projects')\n                    })\n                } else {\n                    res.json().then(data => {\n                        setErrors(data.errors)                        \n                    })\n                }\n        })\n        .catch(err => console.log(err))        \n    }\n\n  return (\n    <div className='App-form'>\n        <h3 className='App-logo'>New Project</h3>\n        <form className='App-form-input' onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                id=\"projectname\"\n                autoComplete=\"off\"\n                value = {name}\n                placeholder = \"Project name\"\n                onChange = {(e) => setName(e.target.value)}\n            />\n            \n            <select className='dropdown' onChange={(e) => setClientId(e.target.value)}>\n                <option value=\"\">Select a client</option>\n                {dropDownClients()}\n            </select>\n            \n            <select className='dropdown' onChange={(e) => setEmployeeId(e.target.value)}>\n                <option value=\"\">Select a employee</option>\n                {dropDownEmployees()}\n            </select>\n            {errors? errors.map(error => <p key={error}>{error}</p>) : null}\n            <button className=\"submit-button\" type=\"submit\">Submit</button>\n            <button className=\"cancel-button\" onClick={() => setShowForm(false)}>X</button>\n        </form>\n    </div>\n  )\n}\n\nexport default NewProjectForm","import React, {useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst NewClientForm = ({onSetShowFormClient, onAddClient}) => {\n    const navigate = useNavigate()    \n    const [name, setName] = useState('')\n    const [errors, setErrors] = useState([])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const newClient = {\n            name: name\n        }        \n        fetch('/clients', {\n            method: 'POST',\n            headers: {'content-type': 'application/json', 'accept': 'application/json'},\n            body: JSON.stringify(newClient)\n        })\n        .then(res => {\n                if(res.ok) {\n                    res.json().then(data => {\n                        onAddClient(data)\n                        onSetShowFormClient(false)\n                        navigate('/clients')\n                    })\n                } else {\n                    res.json().then(data => {\n                        setErrors(data.errors)                        \n                    })\n                }\n        })\n        .catch(err => console.log(err))        \n    }\n\n  return (\n    <div className='App-form'>\n        <h3 className='App-logo'>New Client</h3>\n        <form className='App-form-input' onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                id=\"clientname\"\n                autoComplete=\"off\"\n                value = {name}\n                placeholder = \"Client name\"\n                onChange = {(e) => setName(e.target.value)}\n            />\n                \n            {errors? errors.map(error => <p key={error}>{error}</p>) : null}\n            <button className=\"submit-button\" type=\"submit\">Submit</button>\n            <button className=\"cancel-button\" onClick={() => onSetShowFormClient(false)}>X</button>\n        </form>\n    </div>\n  )\n}\n\nexport default NewClientForm\n\n","import React, {useState} from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst NewEmployeeForm = ({onSetShowFormEmployee, onAddEmployee}) => {\n    const navigate = useNavigate()    \n    const [name, setName] = useState('')\n    const [title, setTitle] = useState('')\n    const [errors, setErrors] = useState([])\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const newEmployee = {\n            name: name,\n            title: title\n        }        \n        fetch('/employees', {\n            method: 'POST',\n            headers: {'content-type': 'application/json', 'accept': 'application/json'},\n            body: JSON.stringify(newEmployee)\n        })\n        .then(res => {\n                if(res.ok) {\n                    res.json().then(data => {\n                        onAddEmployee(data)\n                        onSetShowFormEmployee(false)\n                        navigate('/employees')\n                    })\n                } else {\n                    res.json().then(data => {\n                        setErrors(data.errors)                        \n                    })\n                }\n        })\n        .catch(err => console.log(err))        \n    }\n\n  return (\n    <div className='App-form'>\n        <h3 className='App-logo'>New employee</h3>\n        <form className='App-form-input' onSubmit={handleSubmit}>\n            <input \n                id='employeename'\n                type=\"text\"             \n                autoComplete=\"off\"\n                value = {name}\n                placeholder = \"New employee name\"\n                onChange = {(e) => setName(e.target.value)}\n            />\n            <input\n                id='employeetitle' \n                type=\"text\"             \n                autoComplete=\"off\"\n                value = {title}\n                placeholder = \"New employee title\"\n                onChange = {(e) => setTitle(e.target.value)}\n            />\n                \n            {errors? errors.map(error => <p key={error}>{error}</p>) : null}\n            <button className=\"submit-button\" type=\"submit\">Submit</button>\n            <button className=\"cancel-button\" onClick={() => onSetShowFormEmployee(false)}>X</button>\n        </form>\n    </div>\n  )\n}\n\nexport default NewEmployeeForm","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst Logout = ({onLogout}) => {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        fetch('/logout', {\n            method: \"DELETE\"\n        })\n        .then(() => {            \n                onLogout(null)\n                navigate('/login')\n            }\n        )        \n    }\n\n  return (\n    <div>\n        <h2>Are you sure you want to log out? </h2>\n        <button style={{width: 'auto', height: '40px', fontSize: 'calc(20px)'}} onClick={handleLogout}>YES! Log out</button>\n        <button style={{width: 'auto', height: '40px', fontSize: 'calc(20px)'}} onClick={() => navigate('/')}>NO! Stay logged in</button>\n    </div>\n  )\n}\n\nexport default Logout","import React from 'react'\n\nconst ShowFormButtons = ({onSetShowForm, onSetShowFormClient, onSetShowFormEmployee}) => {\n  return (\n    <div className='App-show-form-buttons'>\n        <button onClick={()=> onSetShowFormClient(true)} className=\"show-form-button\">Add new client</button>\n        <button onClick={()=> onSetShowForm(true)} className=\"show-form-button\">Add new project</button>\n        <button onClick={()=>onSetShowFormEmployee(true)} className=\"show-form-button\">Add new employee</button>        \n    </div>\n  )\n}\n\nexport default ShowFormButtons","import React, {useEffect, useState} from 'react'\nimport { useParams } from 'react-router';\nimport {useNavigate} from 'react-router-dom'\n\nconst ClientPage = () => {\n  const {id} = useParams();\n  const navigate = useNavigate()\n  const [client, setClient] = useState(null)\n    \n  useEffect(() => {\n    fetch(`/clients/${id}`)\n    .then(res =>{\n      if (res.ok) {\n        res.json().then(data=>setClient(data))\n      }else{\n        res.json().then(data=>console.log(data.errors))\n    }\n  })\n}, [id])\n\n  if (!client) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div>           \n        <h1>{client.name}</h1>\n        <h4>Works with: </h4>\n        {client.employees.map(employee => <li id={employee.id} key={employee.id} onClick={()=>navigate(`/employees/`+ employee.id)}>{employee.name}, {employee.title}</li>)}\n        <h4>Project list: </h4>\n        {client.projects.map(project => <li id={project.id} key={project.id}>{project.name}</li>)}\n    </div>\n  )\n}\n\nexport default ClientPage","import React, {useEffect, useState} from 'react'\nimport { useParams } from 'react-router';\nimport {useNavigate} from 'react-router-dom'\n\nconst EmployeePage = () => {\n  const {id} = useParams();\n  const navigate = useNavigate()\n  const [employee, setEmployee] = useState(null)\n\n  useEffect(() => {\n    fetch(`/employees/${id}`)\n    .then(res =>{\n      if (res.ok) {\n    res.json().then(data=>setEmployee(data))\n    }else{\n      res.json().then(data=>console.log(data.errors))\n    }\n  })\n  }, [id])\n\n if (!employee) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div>      \n      <h1>{employee.name}</h1>\n      <h3>{employee.title}</h3>\n      <h4>works with:</h4>\n      {employee.clients.map(client => <li id={client.id} key={client.id} onClick={()=>navigate(`/clients/`+ client.id)}>{client.name}</li>)}\n      <h4>project list: </h4>\n      {employee.projects.map(project => <li id={project.id} key={project.id}>{project.name}</li>)}\n    </div>\n  )\n}\n\nexport default EmployeePage","import React from 'react'\n\nconst Todo = ({todo, onDeleteTodo}) => {\n  \n  const handleDeleteTodo = () => {\n    fetch(`/todos/${todo.id}`, {method: 'DELETE'})\n    .then(res => {\n        if (res.ok) {\n            onDeleteTodo(todo.id)\n        }else{\n            res.json().then(data=>console.log(data.errors))\n        }\n    })\n  }\n\n    return (\n    <li>\n        {todo.name} <button onClick={handleDeleteTodo}>X</button>     \n    </li>\n  )\n}\n\nexport default Todo","import React, { useState} from 'react'\n\nimport Todo from '../components/Todo'\n\nconst UserProfile = ({user}) => {\n    const [newTodo, setNewToDo] = useState('')    \n    const [todos, setTodos] = useState(user.todos)\n    \n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        console.log(newTodo)\n        fetch('/todos', {\n            method: 'POST',\n            headers: {'content-type': 'application/json'},\n            body: JSON.stringify({\n                name: newTodo,\n                user_id: user.id\n            })\n        })\n        .then(res =>{\n            if (res.ok){\n                res.json().then(data=>setTodos([...todos, data]))\n            }else{\n                res.json().then(data=>console.log(data.errors))\n            }\n        })\n        setNewToDo('')\n    }\n    \n    const handleDeleteTodo=(id)=>{\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    return (\n        <div>\n            <h1>{user.first_name} {user.last_name}</h1> \n            <h2> Title: {user.role}</h2>\n            <h3>Your To do list: </h3>\n           {todos.map(todo => <Todo key ={todo.id} todo={todo} onDeleteTodo={handleDeleteTodo}/>)}\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Add a todo\" onChange={(e)=>setNewToDo(e.target.value) } value={newTodo}/>\n                <button type=\"submit\">Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default UserProfile","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport SignUpForm from './components/SignUpForm';\nimport LoginForm from './components/LoginForm';\nimport Home from './pages/Home';\nimport EmployeeList from './pages/EmployeeList';\nimport ClientList from './pages/ClientList';\nimport ProjectList from './pages/ProjectList';\nimport NewProjectForm from './components/NewProjectForm';\nimport NewClientForm from './components/NewClientForm';\nimport NewEmployeeForm from './components/NewEmployeeForm';\nimport Logout from './pages/Logout';\nimport ShowFormButtons from './components/ShowFormButtons';\nimport ClientPage from './pages/ClientPage';\nimport EmployeePage from './pages/EmployeePage';\nimport UserProfile from './pages/UserProfile';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [clients, setClients] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [projects, setProjects] = useState([]);  \n  const [showForm, setShowForm] = useState(false);\n  const [showFormClient, setShowFormClient] = useState(false);\n  const [showFormEmployee, setShowFormEmployee] = useState(false);\n\n\n//auto login if user is logged in\n  useEffect(() => {\n    document.title = 'Project Tracker';\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((data) => setUser(data));\n      }\n    });\n  }, []);\n\n// fetching clients, employees, and projects\n  useEffect(()=>{    \n    fetch('/employees')    \n    .then(r => r.json())\n    .then(data => {      \n      setEmployees(data)\n      })\n    .catch(err => console.log(err))\n\n    fetch('/clients')\n    .then(r => r.json())\n    .then(data => {\n      setClients(data)\n      })\n    .catch(err => console.log(err))  \n  }, [user, projects]) \n\n  useEffect(()=>{    \n     fetch('/projects')\n    .then(r => r.json())\n    .then(data => {\n      setProjects(data)})\n    .catch(err => console.log(err))\n  }, [user])\n\n  const deleteProject = (id) => {\n    const newlist = projects.filter(project => project.id !== id)\n    setProjects(newlist)\n  }\n\n  const updateProject = (updatedProject) => {\n    const newlist = projects.map(project => project.id === updatedProject.id ? updatedProject : project)\n    setProjects(newlist)\n\n  }\n\n  const addProject = (newProject) => {    \n    const newlist = [...projects, newProject]\n    setProjects(newlist)\n  }\n\n  const addClient = (newClient) => {    \n    const newlist = [...clients, newClient]\n    setClients(newlist)\n  }\n\n  const deleteClient = (id) => {\n    const newlist = clients.filter(client => client.id !== id)\n    setClients(newlist)\n  }\n\n  const addEmployee = (newEmployee) => {\n    const newList = [...employees, newEmployee]\n    setEmployees(newList)\n  }\n\n  const deleteEmployee = (id) => {\n    const newList = employees.filter(employee => employee.id !== id)\n    setEmployees(newList)\n  }\n\n  if (!user) return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Routes>\n            <Route path=\"/\" element={<Home user={user}/>} />\n            <Route path=\"/signup\" element={<SignUpForm onLogin={setUser}/>} />\n            <Route path=\"/login\" element={<LoginForm onLogin={setUser}/>} />          \n        </Routes>\n      </Router>      \n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      <Router>\n      <NavBar user={user} /> \n      {showFormClient ? <NewClientForm onSetShowFormClient={setShowFormClient} onAddClient={addClient}/> : null}\n      {showFormEmployee? <NewEmployeeForm onSetShowFormEmployee={setShowFormEmployee} onAddEmployee={addEmployee}/> : null }  \n      {showForm ? <NewProjectForm setShowForm = {setShowForm} clients={clients} employees={employees} onAddProject={addProject}/> : null}      \n      <ShowFormButtons onSetShowForm={setShowForm} onSetShowFormClient={setShowFormClient} onSetShowFormEmployee={setShowFormEmployee}/>\n        <Routes>\n          <Route path=\"/\" element={<Home user={user} clients={clients} employees={employees} projects={projects}/>} />\n          <Route path=\"/logout\" element={<Logout onLogout={setUser} />} />\n          <Route path=\"/employees\" element={<EmployeeList employees={employees} onDeleteEmployee={deleteEmployee} />} />\n          <Route path=\"/clients\" element={<ClientList clients={clients} onDeleteClient={deleteClient} />} />\n          <Route path=\"/clients/:id\" element={<ClientPage />} />\n          <Route path=\"/employees/:id\" element={<EmployeePage />} />\n          <Route path=\"/projects\" element={<ProjectList projects={projects} onUpdateProject={updateProject} onDeleteProject={deleteProject} clients={clients} employees={employees}/>} />          \n          <Route path=\"/user\" element={<UserProfile user={user}/>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}